# worflow to call the update.sh script and create a PR based on the changes
name: update
on:
  schedule:
    - cron:  '*/10 * * * *'
    
  workflow_dispatch:

jobs:
  pre_job:
    name: Check for New Releases
    outputs:
      exists: ${{ steps.out.outputs.exists }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: "actions/checkout@v3"

      - name: Get Latest Release
        id: get-latest-release
        run: |
          echo 'latestRelease=$(curl -s https://api.github.com/repos/ow-mods/ow-mod-man/releases| jq -r ".[0]")' >> $GITHUB_OUTPUT
          echo  'latestTag=$(echo $latestRelease | jq -r ".tag_name")' >> $GITHUB_OUTPUT
          echo "latest manager version : ${latestTag}"
          
      - name: Check For Release
        id: check-release-type
        run: echo 'right-type=steps.get-latest-release.outputs.latestTag == *"gui_v"*]]' >> $GITHUB_OUTPUT
        
      - name: Check For Release Age
        id: check-release-age
        run: | 
          echo 'new-release=$([[steps.get-latest-release.outputs.latestRelease | jq -r "((now - (.published_at | fromdateiso8601) )  / (60*20)  | trunc) == 0]] && echo true || echo false)' >> $GITHUB_OUTPUT
          echo "release age :"
          echo "$(steps.get-latest-release.outputs.latestRelease | jq -r "now - (.published_at | fromdateiso8601))" 
      - name: Out
        id: output
        run: echo 'exists=$[[steps.check-release-type.outputs.right-type]] && echo steps.check-release-age || echo false' >> $GITHUB_OUTPUT
      
      - name: Result
        if: ${{ steps.out.output.exists == 'true' }}
        run: echo "new version of the manager! ğŸ¥³"
  update:
    runs-on: ubuntu-latest
    if: ${{ needs.pre_job.output.exists == 'true'  || github.event_name != 'schedule' }}
    steps:
      - uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Update Packages
        run: ./update.sh
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: Package Version Update
          title: 'Package Version Update'
          body: >
            This PR is auto-generated by 
            [create-pull-request](https://github.com/peter-evans/create-pull-request).
          labels: package update, automated pr
